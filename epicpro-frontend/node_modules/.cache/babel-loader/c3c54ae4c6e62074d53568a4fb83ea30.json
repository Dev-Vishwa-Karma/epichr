{"ast":null,"code":"'use strict';\n\nvar setFunctionLength = require('set-function-length');\n\nvar $defineProperty = require('es-define-property');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\nvar applyBind = require('call-bind-apply-helpers/applyBind');\n\nmodule.exports = function callBind(originalFunction) {\n  var func = callBindBasic(arguments);\n  var adjustedLength = originalFunction.length - (arguments.length - 1);\n  return setFunctionLength(func, 1 + (adjustedLength > 0 ? adjustedLength : 0), true);\n};\n\nif ($defineProperty) {\n  $defineProperty(module.exports, 'apply', {\n    value: applyBind\n  });\n} else {\n  module.exports.apply = applyBind;\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/epicpro-frontend/node_modules/call-bind/index.js"],"names":["setFunctionLength","require","$defineProperty","callBindBasic","applyBind","module","exports","callBind","originalFunction","func","arguments","adjustedLength","length","value","apply"],"mappings":"AAAA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AAEA,IAAIC,eAAe,GAAGD,OAAO,CAAC,oBAAD,CAA7B;;AAEA,IAAIE,aAAa,GAAGF,OAAO,CAAC,yBAAD,CAA3B;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,mCAAD,CAAvB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,gBAAlB,EAAoC;AACpD,MAAIC,IAAI,GAAGN,aAAa,CAACO,SAAD,CAAxB;AACA,MAAIC,cAAc,GAAGH,gBAAgB,CAACI,MAAjB,IAA2BF,SAAS,CAACE,MAAV,GAAmB,CAA9C,CAArB;AACA,SAAOZ,iBAAiB,CACvBS,IADuB,EAEvB,KAAKE,cAAc,GAAG,CAAjB,GAAqBA,cAArB,GAAsC,CAA3C,CAFuB,EAGvB,IAHuB,CAAxB;AAKA,CARD;;AAUA,IAAIT,eAAJ,EAAqB;AACpBA,EAAAA,eAAe,CAACG,MAAM,CAACC,OAAR,EAAiB,OAAjB,EAA0B;AAAEO,IAAAA,KAAK,EAAET;AAAT,GAA1B,CAAf;AACA,CAFD,MAEO;AACNC,EAAAA,MAAM,CAACC,OAAP,CAAeQ,KAAf,GAAuBV,SAAvB;AACA","sourcesContent":["'use strict';\n\nvar setFunctionLength = require('set-function-length');\n\nvar $defineProperty = require('es-define-property');\n\nvar callBindBasic = require('call-bind-apply-helpers');\nvar applyBind = require('call-bind-apply-helpers/applyBind');\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = callBindBasic(arguments);\n\tvar adjustedLength = originalFunction.length - (arguments.length - 1);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + (adjustedLength > 0 ? adjustedLength : 0),\n\t\ttrue\n\t);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react/epicpro-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Layout from './components/Shared/Layout';\nimport Login from './components/Authentication/login';\nimport ForgotPassword from './components/Authentication/forgotpassword';\nimport NotFound from './components/Authentication/404';\nimport InternalServer from './components/Authentication/500';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/HRMS/Dashboard/Dashboard';\nimport Users from './components/HRMS/Users/Users';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTotalUsers = count => {\n      console.log('totalUsers = ', count);\n      this.setState({\n        totalUsers: count\n      });\n    };\n\n    this.state = {\n      totalUsers: 0 // Shared state for total users\n\n    };\n  } // Function to update the total user count\n\n\n  render() {\n    const {\n      totalUsers\n    } = this.state;\n    const {\n      darkMode,\n      boxLayout,\n      darkSidebar,\n      iconColor,\n      gradientColor,\n      rtl,\n      fontType\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${darkMode ? \"dark-mode\" : \"\"}${darkSidebar ? \"sidebar_dark\" : \"\"} ${iconColor ? \"iconcolor\" : \"\"} ${gradientColor ? \"gradient\" : \"\"} ${rtl ? \"rtl\" : \"\"} ${fontType ? fontType : \"\"}${boxLayout ? \"boxlayout\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/forgotpassword\",\n      component: ForgotPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/notfound\",\n      component: NotFound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/internalserver\",\n      component: InternalServer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: Layout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Dashboard, {\n        totalUsers: totalUsers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 22\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/hr-users\",\n      render: props => /*#__PURE__*/React.createElement(Users, Object.assign({}, props, {\n        onUpdateTotalUsers: this.updateTotalUsers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    })))); // let navHeader = this.state.visibility ? <Layout /> : <Login />;\n    // return (\n    //   <div>\n    //       {navHeader}\n    //   </div>\n    // )\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  darkMode: state.settings.isDarkMode,\n  darkSidebar: state.settings.isDarkSidebar,\n  iconColor: state.settings.isIconColor,\n  gradientColor: state.settings.isGradientColor,\n  rtl: state.settings.isRtl,\n  fontType: state.settings.isFont,\n  boxLayout: state.settings.isBoxLayout\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/var/www/html/react/epicpro-frontend/src/App.js"],"names":["React","Component","connect","Layout","Login","ForgotPassword","NotFound","InternalServer","BrowserRouter","Router","Switch","Route","Dashboard","Users","App","constructor","props","updateTotalUsers","count","console","log","setState","totalUsers","state","render","darkMode","boxLayout","darkSidebar","iconColor","gradientColor","rtl","fontType","mapStateToProps","settings","isDarkMode","isDarkSidebar","isIconColor","isGradientColor","isRtl","isFont","isBoxLayout","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Layout from './components/Shared/Layout';\nimport Login from './components/Authentication/login';\nimport ForgotPassword from './components/Authentication/forgotpassword';\nimport NotFound from './components/Authentication/404';\nimport InternalServer from './components/Authentication/500';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/HRMS/Dashboard/Dashboard';\nimport Users from './components/HRMS/Users/Users';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttotalUsers: 0, // Shared state for total users\n\t\t};\n\t}\n\n\t// Function to update the total user count\n\tupdateTotalUsers = (count) => {\n\t\tconsole.log('totalUsers = ', count);\n\t\tthis.setState({ totalUsers: count });\n\t};\n\n\trender() {\n\t\tconst { totalUsers } = this.state;\n\t\tconst { darkMode, boxLayout, darkSidebar, iconColor, gradientColor, rtl, fontType } = this.props\n\t\treturn (\n\t\t\t<div className={`${darkMode ? \"dark-mode\" : \"\"}${darkSidebar ? \"sidebar_dark\" : \"\"} ${iconColor ? \"iconcolor\" : \"\"} ${gradientColor ? \"gradient\" : \"\"} ${rtl ? \"rtl\" : \"\"} ${fontType ? fontType : \"\"}${boxLayout ? \"boxlayout\" : \"\"}`}>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/login\" component={Login} />\n\t\t\t\t\t\t<Route path=\"/forgotpassword\" component={ForgotPassword} />\n\t\t\t\t\t\t<Route path=\"/notfound\" component={NotFound} />\n\t\t\t\t\t\t<Route path=\"/internalserver\" component={InternalServer} />\n\t\t\t\t\t\t<Route component={Layout} />\n\t\t\t\t\t\t{/* Render the Dashboard and pass totalUsers as a prop */}\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\trender={() => <Dashboard totalUsers={totalUsers} />}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{/* Render the Users component and pass the updater function */}\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/hr-users\"\n\t\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t\t<Users {...props} onUpdateTotalUsers={this.updateTotalUsers} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t\t// let navHeader = this.state.visibility ? <Layout /> : <Login />;\n\t\t// return (\n\t\t//   <div>\n\t\t//       {navHeader}\n\t\t//   </div>\n\t\t// )\n\t}\n}\nconst mapStateToProps = state => ({\n\tdarkMode: state.settings.isDarkMode,\n\tdarkSidebar: state.settings.isDarkSidebar,\n\ticonColor: state.settings.isIconColor,\n\tgradientColor: state.settings.isGradientColor,\n\trtl: state.settings.isRtl,\n\tfontType: state.settings.isFont,\n\tboxLayout: state.settings.isBoxLayout\n})\n\nconst mapDispatchToProps = dispatch => ({})\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}
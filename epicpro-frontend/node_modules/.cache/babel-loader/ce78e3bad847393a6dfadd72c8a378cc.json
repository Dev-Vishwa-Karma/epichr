{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/epicpro-frontend/src/components/HRMS/Report/Report.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CountUp from 'react-countup';\nimport Modal from 'react-modal';\n\nclass Report extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = report => {\n      this.setState({\n        selectedReport: report,\n        isModalOpen: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        selectedReport: null,\n        isModalOpen: false\n      });\n    };\n\n    // Handle dropdown change for employee\n    this.handleEmployeeChange = event => {\n      this.setState({\n        selectedEmployee: event.target.value\n      });\n    };\n\n    // Handle dropdown change\n    this.handleStatusChange = event => {\n      this.setState({\n        selectedStatus: event.target.value\n      });\n    };\n\n    // Handle textarea input change\n    this.handleReportChange = event => {\n      this.setState({\n        punchOutReport: event.target.value\n      });\n    };\n\n    this.addReport = () => {\n      const {\n        selectedEmployee,\n        selectedStatus,\n        punchOutReport\n      } = this.state; // Validate form inputs\n\n      if (!selectedEmployee || !selectedStatus) {\n        alert(\"All the fields are required\");\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('employee_id', selectedEmployee);\n      formData.append('punch_status', selectedStatus);\n      formData.append('punch_out_report', punchOutReport); // API call to add break\n\n      fetch(`${process.env.REACT_APP_API_URL}/reports.php?action=add`, {\n        method: \"POST\",\n        body: formData\n      }).then(response => response.json()).then(data => {\n        if (data.status === \"success\") {\n          alert(data.message); // Close the modal\n\n          document.querySelector(\"#addReportModal .close\").click();\n          this.componentDidMount();\n        } else {\n          alert(data.message);\n          console.log(\"Failed to add break data\");\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.state = {\n      reports: [],\n      error: null,\n      selectedReport: null,\n      isModalOpen: false,\n      selectedEmployee: \"\",\n      employeeData: [],\n      selectedStatus: \"\",\n      punchOutReport: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let apiUrl = '';\n\n    if (window.user.role == 'super_admin' || window.user.role == 'admin') {\n      apiUrl = `${process.env.REACT_APP_API_URL}/reports.php`;\n    } else {\n      apiUrl = `${process.env.REACT_APP_API_URL}/reports.php?user_id=${window.user.id}`;\n    }\n\n    alert(apiUrl); // Make the GET API call when the component is mounted\n\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      if (data.status === 'success') {\n        this.setState({\n          reports: data.data\n        });\n      } else {\n        this.setState({\n          error: data.message\n        });\n      }\n    }).catch(err => {\n      this.setState({\n        error: 'Failed to fetch data'\n      });\n      console.error(err);\n    });\n    /** Get employees list */\n\n    fetch(`${process.env.REACT_APP_API_URL}/get_employees.php`).then(response => response.json()).then(data => {\n      if (data.status === 'success') {\n        this.setState({\n          employeeData: data.data\n        });\n      } else {\n        this.setState({\n          error: data.message\n        });\n      }\n    }).catch(err => {\n      this.setState({\n        error: 'Failed to fetch data'\n      });\n      console.error(err);\n    });\n  }\n\n  render() {\n    const {\n      fixNavbar\n    } = this.props;\n    const {\n      reports,\n      selectedReport,\n      isModalOpen,\n      error,\n      employeeData,\n      selectedStatus,\n      selectedEmployee,\n      punchOutReport\n    } = this.state; // Define custom styles for the modal\n\n    const customStyles = {\n      overlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)' // Semi-transparent black background\n\n      },\n      content: {\n        position: 'absolute',\n        top: '20%',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        width: '80%',\n        // Adjust width as needed\n        maxWidth: '600px',\n        // Maximum width\n        height: 'auto',\n        maxHeight: '80%',\n        // Maximum height\n        overflow: 'auto',\n        border: '1px solid #ccc',\n        background: '#fff',\n        borderRadius: '4px',\n        outline: 'none',\n        padding: '20px'\n      }\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `section-body ${fixNavbar ? \"marginTop\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav nav-tabs page-header-tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }), window.user && window.user.role !== 'employee' && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-action d-md-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addReportModal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fe fe-plus mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 141\n      }\n    }), \"Add\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-body mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-pane fade show active\",\n      id: \"Report-Invoices\",\n      role: \"tabpanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-hover table-striped table-vcenter mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 61\n      }\n    }, \"Employee Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 61\n      }\n    }, \"Employee Code\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 61\n      }\n    }, \"Attendance Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 61\n      }\n    }, \"Punch In\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 61\n      }\n    }, \"Punch Out\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 61\n      }\n    }, \"Total Hours Worked\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 61\n      }\n    }, \"Attendance Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 61\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 53\n      }\n    }, reports.length > 0 ? reports.map((report, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 69\n      }\n    }, report.employee_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 69\n      }\n    }, report.code), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 69\n      }\n    }, report.attendance_date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 69\n      }\n    }, report.punch_in_time), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 69\n      }\n    }, report.punch_out_time), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 69\n      }\n    }, report.total_hours_worked), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 69\n      }\n    }, report.attendance_status), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.openModal(report),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 73\n      }\n    }, \"View Report\")))) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"8\",\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 65\n      }\n    }, error ? error : 'No reports available.'))))))))))), selectedReport && /*#__PURE__*/React.createElement(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: this.closeModal,\n      contentLabel: \"Report Details\",\n      ariaHideApp: false,\n      style: customStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, \"Report Details\"), this.state.selectedReport && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"multiline-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 37\n      }\n    }, this.state.selectedReport.report)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }, \"Close\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"addReportModal\",\n      tabIndex: -1,\n      role: \"dialog\",\n      \"aria-labelledby\": \"addReportModalLabel\"\n      /* aria-hidden=\"true\" */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"report\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"addReportModalLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 37\n      }\n    }, \"Add Report\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 117\n      }\n    }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: selectedEmployee,\n      onChange: this.handleEmployeeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 53\n      }\n    }, \"Select Employee\"), employeeData.length > 0 ? employeeData.map((employee, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: employee.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 61\n      }\n    }, `${employee.first_name} ${employee.last_name}`)) : /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 57\n      }\n    }, \"No Employees Available\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: selectedStatus,\n      onChange: this.handleStatusChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 53\n      }\n    }, \"Select Status\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 53\n      }\n    }, \"Punch In\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"completed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 53\n      }\n    }, \"Punch Out\")))), selectedStatus === \"completed\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      placeholder: \"Report\",\n      value: punchOutReport,\n      onChange: this.handleReportChange,\n      rows: \"10\",\n      cols: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 53\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 37\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.addReport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 37\n      }\n    }, \"Save changes\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  fixNavbar: state.settings.isFixNavbar\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);","map":{"version":3,"sources":["/opt/lampp/htdocs/epicpro-frontend/src/components/HRMS/Report/Report.js"],"names":["React","Component","connect","CountUp","Modal","Report","constructor","props","openModal","report","setState","selectedReport","isModalOpen","closeModal","handleEmployeeChange","event","selectedEmployee","target","value","handleStatusChange","selectedStatus","handleReportChange","punchOutReport","addReport","state","alert","formData","FormData","append","fetch","process","env","REACT_APP_API_URL","method","body","then","response","json","data","status","message","document","querySelector","click","componentDidMount","console","log","catch","error","reports","employeeData","apiUrl","window","user","role","id","err","render","fixNavbar","customStyles","overlay","position","top","left","right","bottom","backgroundColor","content","transform","width","maxWidth","height","maxHeight","overflow","border","background","borderRadius","outline","padding","length","map","index","employee_name","code","attendance_date","punch_in_time","punch_out_time","total_hours_worked","attendance_status","textAlign","employee","first_name","last_name","mapStateToProps","settings","isFixNavbar","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport CountUp from 'react-countup';\r\nimport Modal from 'react-modal';\r\n\r\nclass Report extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reports: [],\r\n            error: null,\r\n            selectedReport: null,\r\n            isModalOpen: false,\r\n            selectedEmployee: \"\",\r\n            employeeData: [],\r\n            selectedStatus: \"\",\r\n            punchOutReport: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let apiUrl = '';\r\n\r\n        if (window.user.role == 'super_admin' || window.user.role == 'admin') {\r\n            apiUrl = `${process.env.REACT_APP_API_URL}/reports.php`;\r\n        } else {\r\n            apiUrl = `${process.env.REACT_APP_API_URL}/reports.php?user_id=${window.user.id}`;\r\n        }\r\nalert(apiUrl);\r\n        // Make the GET API call when the component is mounted\r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.status === 'success') {\r\n                    this.setState({ reports: data.data });\r\n                } else {\r\n                    this.setState({ error: data.message });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({ error: 'Failed to fetch data' });\r\n                console.error(err);\r\n            });\r\n\r\n        /** Get employees list */\r\n        fetch(`${process.env.REACT_APP_API_URL}/get_employees.php`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.status === 'success') {\r\n                    this.setState({ employeeData: data.data });\r\n                } else {\r\n                    this.setState({ error: data.message });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({ error: 'Failed to fetch data' });\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    openModal = (report) => {\r\n        this.setState({ selectedReport: report, isModalOpen: true });\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.setState({ selectedReport: null, isModalOpen: false });\r\n    };\r\n\r\n    // Handle dropdown change for employee\r\n    handleEmployeeChange = (event) => {\r\n        this.setState({ selectedEmployee: event.target.value });\r\n    };\r\n\r\n    // Handle dropdown change\r\n    handleStatusChange = (event) => {\r\n        this.setState({ selectedStatus: event.target.value });\r\n    };\r\n\r\n    // Handle textarea input change\r\n    handleReportChange = (event) => {\r\n        this.setState({ punchOutReport: event.target.value });\r\n    };\r\n\r\n    addReport = () => {\r\n        const { selectedEmployee, selectedStatus, punchOutReport } = this.state;\r\n\r\n        // Validate form inputs\r\n        if (!selectedEmployee || !selectedStatus) {\r\n            alert(\"All the fields are required\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('employee_id', selectedEmployee);\r\n        formData.append('punch_status', selectedStatus);\r\n        formData.append('punch_out_report', punchOutReport);\r\n\r\n        // API call to add break\r\n        fetch(`${process.env.REACT_APP_API_URL}/reports.php?action=add`, {\r\n            method: \"POST\",\r\n            body: formData,\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.status === \"success\") {\r\n                    alert(data.message);\r\n                    // Close the modal\r\n                    document.querySelector(\"#addReportModal .close\").click();\r\n                    this.componentDidMount();\r\n                } else {\r\n                    alert(data.message);\r\n                    console.log(\"Failed to add break data\");\r\n                }\r\n            })\r\n            .catch((error) => console.error(\"Error:\", error));\r\n    };\r\n\r\n    render() {\r\n        const { fixNavbar } = this.props;\r\n        const { reports, selectedReport, isModalOpen, error, employeeData, selectedStatus, selectedEmployee, punchOutReport } = this.state;\r\n        // Define custom styles for the modal\r\n        const customStyles = {\r\n            overlay: {\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)', // Semi-transparent black background\r\n            },\r\n            content: {\r\n                position: 'absolute',\r\n                top: '20%',\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                width: '80%', // Adjust width as needed\r\n                maxWidth: '600px', // Maximum width\r\n                height: 'auto',\r\n                maxHeight: '80%', // Maximum height\r\n                overflow: 'auto',\r\n                border: '1px solid #ccc',\r\n                background: '#fff',\r\n                borderRadius: '4px',\r\n                outline: 'none',\r\n                padding: '20px',\r\n            },\r\n        };\r\n        return (\r\n            <>\r\n                <div>\r\n                    <div className={`section-body ${fixNavbar ? \"marginTop\" : \"\"}`}>\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <ul className=\"nav nav-tabs page-header-tab\">\r\n                                </ul>\r\n                                {window.user && window.user.role !== 'employee' && (\r\n                                    <div className=\"header-action d-md-flex\">\r\n                                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addReportModal\"><i className=\"fe fe-plus mr-2\" />Add</button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-body mt-3\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"tab-content mt-3\">\r\n                                <div className=\"tab-pane fade show active\" id=\"Report-Invoices\" role=\"tabpanel\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-hover table-striped table-vcenter mb-0\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Employee Name</th>\r\n                                                            <th>Employee Code</th>\r\n                                                            <th>Attendance Date</th>\r\n                                                            <th>Punch In</th>\r\n                                                            <th>Punch Out</th>\r\n                                                            <th>Total Hours Worked</th>\r\n                                                            <th>Attendance Status</th>\r\n                                                            <th>Action</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {reports.length > 0 ? (\r\n                                                            reports.map((report, index) => (\r\n                                                                <tr>\r\n                                                                    <td>{report.employee_name}</td>\r\n                                                                    <td>{report.code}</td>\r\n                                                                    <td>{report.attendance_date}</td>\r\n                                                                    <td>{report.punch_in_time}</td>\r\n                                                                    <td>{report.punch_out_time}</td>\r\n                                                                    <td>{report.total_hours_worked}</td>\r\n                                                                    <td>{report.attendance_status}</td>\r\n                                                                    <td>\r\n                                                                        <button\r\n                                                                            className=\"btn btn-primary\"\r\n                                                                            onClick={() => this.openModal(report)}\r\n                                                                        >\r\n                                                                            View Report\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <tr>\r\n                                                                <td colSpan=\"8\" style={{ textAlign: 'center' }}>\r\n                                                                    {error ? error : 'No reports available.'}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Modal for viewing report details */}\r\n                    {selectedReport && (\r\n                        <Modal\r\n                            isOpen={isModalOpen}\r\n                            onRequestClose={this.closeModal}\r\n                            contentLabel=\"Report Details\"\r\n                            ariaHideApp={false}\r\n                            style={customStyles}\r\n                        >\r\n                            <h2>Report Details</h2>\r\n                            {this.state.selectedReport && (\r\n                                <div className=\"multiline-text\">\r\n                                    <p>{this.state.selectedReport.report}</p>\r\n                                    {/* Display other details as needed */}\r\n                                </div>\r\n                            )}\r\n                            <button className=\"btn btn-secondary\" onClick={this.closeModal}>\r\n                                Close\r\n                            </button>\r\n                        </Modal>\r\n                    )}\r\n                    {/* Add Break Modal */}\r\n                    <div className=\"modal fade\" id=\"addReportModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"addReportModalLabel\" /* aria-hidden=\"true\" */>\r\n                        <div className=\"modal-dialog\" role=\"report\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"addReportModalLabel\">Add Report</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row clearfix\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <select className=\"form-control\" value={selectedEmployee} onChange={this.handleEmployeeChange}>\r\n                                                    <option value=\"\">Select Employee</option>\r\n                                                    {employeeData.length > 0 ? (\r\n                                                        employeeData.map((employee, index) => (\r\n                                                            <option key={index} value={employee.id}>\r\n                                                                {`${employee.first_name} ${employee.last_name}`}\r\n                                                            </option>\r\n                                                        ))\r\n                                                    ) : (\r\n                                                        <option value=\"\">No Employees Available</option>\r\n                                                    )}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <select className=\"form-control\" value={selectedStatus} onChange={this.handleStatusChange}>\r\n                                                    <option value=\"\">Select Status</option>\r\n                                                    <option value=\"active\">Punch In</option>\r\n                                                    <option value=\"completed\">Punch Out</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        {selectedStatus === \"completed\" && (\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <textarea\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Report\"\r\n                                                        value={punchOutReport}\r\n                                                        onChange={this.handleReportChange}\r\n                                                        rows=\"10\"\r\n                                                        cols=\"50\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.addReport}>Save changes</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    fixNavbar: state.settings.isFixNavbar\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);"]},"metadata":{},"sourceType":"module"}